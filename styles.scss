@import 'material-theme-creator';
@import 'theming';

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
}

h1 {
  margin-top: 3em;
  text-align: center;
  font-weight: normal;
}

h2 {
  font-weight: normal;
  margin-top: 3em;
}

h3 {
  font-weight: normal;
  margin-top: 3em;
}

section {
  width: 100%;
  max-width: 95vw;
  margin-bottom: 72px;
  &:last-child {
    width: auto;
  }
}

pre {
  overflow: auto;
}

form {
  margin-bottom: 16px;

  label {
    display: grid;
    grid-template-columns: 85px 40px 1fr;
    @media (min-width: 600px) {
      grid-template-columns: 150px 50px 1fr;
    }
  }
}

.main {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 16px;
  width: 100%;
  max-width: 880px;
  margin: 0 auto;
}

.creator {
  .theme {
    &::after {
      content: 'Your theme' !important;
    }

    $arr_names: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700;
    $theme: create-theme-map('primary');

    @include create-color(hsl(200, 70%, 40%), 'primary');
    --primary-contrast-threshold: 50%;

    @for $i from 1 through 14 {
      span:nth-child(14n + #{$i}) {
        background-color: map-get($theme, nth($arr_names, $i));
        color: map-get(map-get($theme, contrast), nth($arr_names, $i));
      }
    }
    span:nth-child(6) {
      transform: scale(1.1);
      border-radius: 4px;
    }
  }
}

.theme {
  font-size: 12px;
  width: 100%;
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  grid-template-rows: 1fr 1fr;
  align-items: stretch;
  border-bottom: 5px solid white;
  position: relative;

  @media (min-width: 600px) {
    grid-template-columns: repeat(14, 1fr) auto;
    grid-template-rows: 1fr;
    border-bottom: none;
  }

  &:after {
    text-shadow: 0 0 5px white, 0 0 5px white, 0 0 5px white, 0 0 5px white;
    padding: 0;
    font-size: 16px;
    display: flex;
    width: 150px;
    height: 50px;
    align-items: center;
    justify-content: center;
    position: absolute;
    bottom: 50%;
    right: 50%;
    transform: translate(50%, 50%);

    @media (min-width: 600px) {
      position: static;
      transform: none;
      padding: 0 50px 0 20px;
    }
  }

  span {
    display: flex;
    height: 50px;
    align-items: center;
    justify-content: center;
  }
}

.themes {
  .theme {
    &:nth-child(2n + 1) {
      &:after {
        content: 'Google Material';
      }
    }
    &:nth-child(2n) {
      &:after {
        content: 'Theme Creator';
      }
    }

    $arr_names: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700;

    $arr_colors: $mat-red, $mat-pink, $mat-purple, $mat-deep-purple, $mat-indigo, $mat-blue, $mat-light-blue, $mat-cyan,
      $mat-teal, $mat-green, $mat-light-green, $mat-lime, $mat-yellow, $mat-amber, $mat-orange, $mat-deep-orange,
      $mat-brown, $mat-grey, $mat-blue-grey;

    $arr_thresholds: 62%, 58%, 65%, 65%, 65%, 58%, 54%, 45%, 38%, 47%, 47%, 38%, 20%, 20%, 38%, 60%, 60%, 60%, 62%;

    @for $c from 1 through 38 {
      &:nth-child(#{$c}) {
        $theme: mat-palette(create-theme-map('theme'));
        @if ($c%2==0) {
          @include create-color(mat-color(nth($arr_colors, $c / 2), 500), 'theme');
          --theme-contrast-threshold: #{nth($arr_thresholds, $c / 2)};
        } @else {
          margin-top: 20px;
          $theme: mat-palette(nth($arr_colors, ($c + 1) / 2));
        }

        @for $i from 1 through 14 {
          span:nth-child(14n + #{$i}) {
            background-color: mat-color($theme, nth($arr_names, $i));
            color: mat-contrast($theme, nth($arr_names, $i));
          }
        }
      }
    }
  }
}
