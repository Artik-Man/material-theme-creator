include ./components/slider
include ./components/textfield

-const points = '50,100,200,300,400,500,600,700,800,900,A100,A200,A400,A700'.split(',');
-const themes = new Array(38).fill(0);
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1.0")
        meta(http-equiv="X-UA-Compatible" content="ie=edge")
        title="Material Theme Creator"
        link(rel="stylesheet" href="styles.css")
    body
        input(type="checkbox" id="switch-theme" class="visually-hidden")
        .page
            .theme-background
            main
                .header
                    include  ./components/switch-theme
                    h1="Material Theme Creator"
                p
                    a(href="https://github.com/Artik-Man/material-theme-creator" target="_blank")="GitHub"
                    | &nbsp; | &nbsp;
                    a(href="https://artik-man.github.io/material-theme-creator-demo-page/" target="_blank")="Demo page"

                section
                    h2 Create a custom&nbsp;theme from&nbsp;one&nbsp;color in&nbsp;real&nbsp;time. It's&nbsp;pure&nbsp;CSS, without&nbsp;JavaScript

                    .create-theme
                        h3 Hue
                        .value.-h
                        +slider(0,360,220,1,"Hue","creator-h")
                        h3 Saturation
                        .value.-s
                        +slider(0,100,80,1,"Saturation","creator-s")
                        h3 Lightness
                        .value.-l
                        +slider(0,100,60,1,"Lightness","creator-l")
                        h3 Contrast threshold
                        .value.-cc="65%"
                        +slider(0,100,65,1,"Contrast threshold","creator-cc")

                    .your-theme

                        each point in points
                            span.point(data-point=point)=point
                                .info
                                    | var(--my-theme-#{point}) <br><br>
                                    | hsla(<br>
                                    | &nbsp; var(--my-theme-#{point})-h,<br>
                                    | &nbsp; var(--my-theme-#{point})-s,<br>
                                    | &nbsp; var(--my-theme-#{point})-l,<br>
                                    | &nbsp; 100%,<br>
                                    | )
                    form.download-theme#form
                        +textfield('theme-name', "Theme name", 'my-theme')
                        button.mdc-button.mdc-button--raised
                            span.mdc-button__label Download
                                span.hidden-xs &nbsp;theme



                section.markdown
                    include:markdown-it ../README.md

                section
                    h2#article-testing
                        | Testing [
                        code @mixin create-variables-from-color
                        | ]
                    .themes
                        each theme in themes
                            .theme
                                each point in points
                                    span.point(data-point=point)=point

        .test
