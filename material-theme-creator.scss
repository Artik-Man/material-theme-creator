/*

  Author: Artik Man [mail@artik.me, github.com/Artik-Man]
  Docs: https://artik-man.github.io/material-theme-creator/

  _________________________________________

  USING

  0. @import 'material-theme-creator'; // Name of this file!
    -> Import this file



  1. :root {
       @include set-color-variables(#03a9f4, #00acc1, #f44336);
     }
    -> Creating 12 CSS Variables

    Example:

    :root {
      --primary-h: 199deg;
      --primary-s: 98%;
      --primary-l: 48%;
      --primary: hsl(var(--primary-h), calc(var(--primary-s) * 1%), calc(var(--primary-l) * 1%))

      --accent-h: 187deg;
      --accent-s: 100%;
      --accent-l: 38%;
      --accent: hsl(var(--accent-h), calc(var(--accent-s) * 1%), calc(var(--accent-l) * 1%))

      --warn-h: 4deg;
      --warn-s: 90%;
      --warn-l: 58%;
      --warn: hsl(var(--warn-h), calc(var(--warn-s) * 1%), calc(var(--warn-l) * 1%))
    }



  2. :root {
       @include set-contrast-threshold(45%, 50%, 55%);
     }
    -> Not important step. Default value is 50%.
    -> Creating 3 CSS Variables

    Example:

    :root {
      --primary-contrast-threshold: 45%;
      --accent-contrast-threshold: 50%;
      --warn-contrast-threshold: 55%;
    }



  3. @include angular-material-theme(mat-light-theme(mat-palette($primary-map), mat-palette($accent-map), mat-palette($warn-map))); // Light theme
  OR @include angular-material-theme(mat-dark-theme( mat-palette($primary-map), mat-palette($accent-map), mat-palette($warn-map))); // Dark theme
    -> Creating material theme.



  4. Using in main.scss
   --> You have 5 use cases (see example)

   Example:

   .my-block {
     // scss + angular.material:
     background:          mat-color($primary-palette, 500);
     color:               mat-contrast($primary-palette, 500);

     // scss:
     border-top-color:    map-get($primary-map, 100);

     // css:
     border-left-color:   var(--primary);
     border-bottom-color: hsl(var(--accent-h), calc(var(--accent-s) * 1%), calc(var(--accent-l) * 1%));

     // You can affect the color:
     border-right-color: 
       hsla(
         calc(var(--accent-h) + 12),       // Hue
         calc(var(--accent-s) * 1% + 5%),  // Saturation
         calc(var(--accent-l) * 1% + 23%), // Lightness
         .5                                // Alpha-channel (opacity)
       );
    }
    
  _________________________________________
    
  Full example [Angular + Material]:
  
  @import '@angular/material/theming';
  @import 'material-theme-creator'; // Name of this file!
  
  :root {
       @include set-color-variables(#03a9f4, #00acc1, #f44336);
       @include set-contrast-threshold(45%, 50%, 55%);
   }
   
   @include mat-core();
   @include angular-material-theme(mat-light-theme(mat-palette($primary-map), mat-palette($accent-map), mat-palette($warn-map)));

   .my-block {
     background: mat-color($primary-map, 500);
     color:      mat-contrast($primary-map, 500);
   }

_________________________________________

  Full example [SASS only]:

  @import 'material-theme-creator'; // Name of this file!
  
  :root {
       @include set-color-variables(#03a9f4, #00acc1, #f44336);
       @include set-contrast-threshold(45%, 50%, 55%);
   }

  .my-block {
     background: map-get($primary-map, 500);
     color:      map-get(map-get($primary-map, contrast), 500);
   }
*/

:root {
  --hA100: 0.96;
  --hA200: 0.96;
  --hA400: 0.96;
  --hA700: 1;

  --s50: 0.75;
  --s100: 0.8;
  --s200: 0.85;
  --s300: 0.9;
  --s400: 0.95;
  --s600: 0.95;
  --s700: 0.9;
  --s800: 0.85;
  --s900: 0.8;
  --sA100: 0.8;
  --sA200: 0.8;
  --sA400: 1;
  --sA700: 1;

  --l50: 0.15;
  --l100: 0.3;
  --l200: 0.5;
  --l300: 0.7;
  --l400: 0.85;
  --l600: 0.8;
  --l700: 0.6;
  --l800: 0.4;
  --l900: 0.2;
  --lA100: 0.65;
  --lA200: 0.55;
  --lA400: 0.45;
  --lA700: 0.4;

  --light-h: 0;
  --light-s: 0;
  --light-l: 100;
}

@function create-theme-map($theme-name) {
  $theme-h: '--' + $theme-name + '-h';
  $theme-s: '--' + $theme-name + '-s';
  $theme-l: '--' + $theme-name + '-l';
  $contrast-threshold: '--' + $theme-name + '-contrast-threshold';

  @return (
    50:
      hsl(
        var(#{$theme-h}),
        calc(((var(#{$theme-s}) - var(--light-s)) * var(--s50) + var(--light-s)) * 1%),
        calc(((var(#{$theme-l}) - var(--light-l)) * var(--l50) + var(--light-l)) * 1%)
      ),
    100:
      hsl(
        var(#{$theme-h}),
        calc(((var(#{$theme-s}) - var(--light-s)) * var(--s100) + var(--light-s)) * 1%),
        calc(((var(#{$theme-l}) - var(--light-l)) * var(--l100) + var(--light-l)) * 1%)
      ),
    200:
      hsl(
        var(#{$theme-h}),
        calc(((var(#{$theme-s}) - var(--light-s)) * var(--s200) + var(--light-s)) * 1%),
        calc(((var(#{$theme-l}) - var(--light-l)) * var(--l200) + var(--light-l)) * 1%)
      ),
    300:
      hsl(
        var(#{$theme-h}),
        calc(((var(#{$theme-s}) - var(--light-s)) * var(--s300) + var(--light-s)) * 1%),
        calc(((var(#{$theme-l}) - var(--light-l)) * var(--l300) + var(--light-l)) * 1%)
      ),
    400:
      hsl(
        var(#{$theme-h}),
        calc(((var(#{$theme-s}) - var(--light-s)) * var(--s400) + var(--light-s)) * 1%),
        calc(((var(#{$theme-l}) - var(--light-l)) * var(--l400) + var(--light-l)) * 1%)
      ),
    500: hsl(var(#{$theme-h}), calc(var(#{$theme-s}) * 1%), calc(var(#{$theme-l}) * 1%)),
    600:
      hsl(
        var(#{$theme-h}),
        calc(((1 - var(--s600)) * 100 + var(--s600) * var(#{$theme-s})) * 1%),
        calc(((1 - var(--l600)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l600) * var(#{$theme-l})) * 1%)
      ),
    700:
      hsl(
        var(#{$theme-h}),
        calc(((1 - var(--s700)) * 100 + var(--s700) * var(#{$theme-s})) * 1%),
        calc(((1 - var(--l700)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l700) * var(#{$theme-l})) * 1%)
      ),
    800:
      hsl(
        var(#{$theme-h}),
        calc(((1 - var(--s800)) * 100 + var(--s800) * var(#{$theme-s})) * 1%),
        calc(((1 - var(--l800)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l800) * var(#{$theme-l})) * 1%)
      ),
    900:
      hsl(
        var(#{$theme-h}),
        calc(((1 - var(--s900)) * 100 + var(--s900) * var(#{$theme-s})) * 1%),
        calc(((1 - var(--l900)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l900) * var(#{$theme-l})) * 1%)
      ),
    A100: hsl(calc(var(#{$theme-h}) * var(--hA100)), calc(var(--sA100) * 100%), calc(var(--lA100) * 100%)),
    A200: hsl(calc(var(#{$theme-h}) * var(--hA200)), calc(var(--sA200) * 100%), calc(var(--lA200) * 100%)),
    A400: hsl(calc(var(#{$theme-h}) * var(--hA400)), calc(var(--sA400) * 100%), calc(var(--lA400) * 100%)),
    A700: hsl(calc(var(#{$theme-h}) * var(--hA700)), calc(var(--sA700) * 100%), calc(var(--lA700) * 100%)),
    contrast: (
      50:
        hsl(
          0,
          0%,
          calc(
            ((((1 - var(--l50)) * 100 + var(--l50) * var(#{$theme-l})) * 1%) - var(#{$contrast-threshold}, 50%)) *
              (-100)
          )
        ),
      100:
        hsl(
          0,
          0%,
          calc(
            ((((1 - var(--l100)) * 100 + var(--l100) * var(#{$theme-l})) * 1%) - var(#{$contrast-threshold}, 50%)) *
              (-100)
          )
        ),
      200:
        hsl(
          0,
          0%,
          calc(
            ((((1 - var(--l200)) * 100 + var(--l200) * var(#{$theme-l})) * 1%) - var(#{$contrast-threshold}, 50%)) *
              (-100)
          )
        ),
      300:
        hsl(
          0,
          0%,
          calc(
            ((((1 - var(--l300)) * 100 + var(--l300) * var(#{$theme-l})) * 1%) - var(#{$contrast-threshold}, 50%)) *
              (-100)
          )
        ),
      400:
        hsl(
          0,
          0%,
          calc(
            ((((1 - var(--l400)) * 100 + var(--l400) * var(#{$theme-l})) * 1%) - var(#{$contrast-threshold}, 50%)) *
              (-100)
          )
        ),
      500: hsl(0, 0%, calc(((var(#{$theme-l}) * 1%) - var(#{$contrast-threshold}, 50%)) * (-100))),
      600:
        hsl(
          0,
          0%,
          calc(
            (
                (((1 - var(--l600)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l600) * var(#{$theme-l})) * 1%) -
                  var(#{$contrast-threshold}, 50%)
              ) * (-100)
          )
        ),
      700:
        hsl(
          0,
          0%,
          calc(
            (
                (((1 - var(--l700)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l700) * var(#{$theme-l})) * 1%) -
                  var(#{$contrast-threshold}, 50%)
              ) * (-100)
          )
        ),
      800:
        hsl(
          0,
          0%,
          calc(
            (
                (((1 - var(--l800)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l800) * var(#{$theme-l})) * 1%) -
                  var(#{$contrast-threshold}, 50%)
              ) * (-100)
          )
        ),
      900:
        hsl(
          0,
          0%,
          calc(
            (
                (((1 - var(--l900)) * var(#{$theme-l}) * var(#{$theme-l}) / 100 + var(--l900) * var(#{$theme-l})) * 1%) -
                  var(#{$contrast-threshold}, 50%)
              ) * (-100)
          )
        ),
      A100: hsl(0, 0%, calc((var(--lA100) * 100% - var(#{$contrast-threshold}, 50%)) * (-100))),
      A200: hsl(0, 0%, calc((var(--lA200) * 100% - var(#{$contrast-threshold}, 50%)) * (-100))),
      A400: hsl(0, 0%, calc((var(--lA400) * 100% - var(#{$contrast-threshold}, 50%)) * (-100))),
      A700: hsl(0, 0%, calc((var(--lA700) * 100% - var(#{$contrast-threshold}, 50%)) * (-100))),
    )
  );
}

@function mtc-get($map, $name) {
  @return map-get($map, $name);
}

@function mtc-contrast($map, $name) {
  @return map-get(map-get($map, contrast), $name);
}


@mixin create-color($color, $name) {
  --#{$name}-h: #{str-slice(hue($color) + '', 0, -4)};
  --#{$name}-s: #{str-slice(saturation($color) + '', 0, -2)};
  --#{$name}-l: #{str-slice(lightness($color) + '', 0, -2)};
  --#{$name}: hsl(var(--#{$name}-h), calc(var(--#{$name}-s) * 1%), calc(var(--#{$name}-l) * 1%));
}

/* Step 1 */
@mixin set-color-variables($primary, $accent, $warn) {
  @include create-color($primary, 'primary');
  @include create-color($accent, 'accent');
  @include create-color($warn, 'warn');
}

/* Step 2 */
@mixin set-contrast-threshold($primary: 50%, $accent: 50%, $warn: 50%) {
  --primary-contrast-threshold: #{$primary};
  --accent-contrast-threshold: #{$accent};
  --warn-contrast-threshold: #{$warn};
}

$primary-map: create-theme-map('primary');
$accent-map: create-theme-map('accent');
$warn-map: create-theme-map('warn');
